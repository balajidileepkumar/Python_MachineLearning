Basic Python
--------------------
difference between generator and iterator?
write a code for primary number in python?
what is a .pyc file?
how to do async operations in python?
why do we need indexes in sql?
how to join dataframe
dataframe merge and join methods.
how to read file with csv and pandas delimited by pipe 

Python Architecture
---------------------
what is the use of @dataclass?
what is the function of slots?
how to read a 3gb file in python and do the frequency distribution of words?
how to read large file in python? -- chunks and file input
how read excel file in pandas and remove duplicate rows for two columns?
what are the ways to load a nested data structure in python?
What are the ways to improve the performance of an application?
1. Proper Algorithm & Data Structure
2. Using Built-in Functions and Libraries
3. Use Multiple Assignments
4. Prefer List Comprehension Over Loops
5. Proper Import
6. String Concatenation

what is the difference between uat testing and integration testing?
Unit Testing is a kind of white box testing, whereas Integration Testing is a kind of black-box testing. For Unit Testing, accessibility of code is required, as it tests the written code, while for Integration Testing, access to code is not required, since it tests the interactions and interfaces between modules.

what are the test tools in python?/how do you test your code?
1.      PYUNIT/UNITTEST
2.      PYTHON ROBOT FRAMEWORK
PYTEST
4.      PYTHON BEHAVE
5.      PYTHON GAUGE
6.      PYTHON LETTUCE
7.      PYTHON JASMINE
8.      PYTHON SPLINTER
9.      PYTHON LOCUST


how do you make the code review?
Useful variable names. Python is almost English and useful variable names make the code self documenting. No PHP style variable names (a,a2,b1,b11, I understand there will be a standard practices in PHP, but too many PHP developers I know work like this).
If possible, use standard library / other good libraries to do things efficiently. I would prefer joins being done in Pandas than reinventing the wheel or numpy arrays over implementing oneâ€™s own matrix data structure for any mathematical operations.
Knowing when to use what algorithms. Marginal Utility is of essence. Implementing nested fors to compare list is useless, writing a complex discrete optimization algorithm over a list size of 10 is too. Rather than being uninvolved or overenthusiastic, code should be pragmatic.
Breaking down code into functions. Monolith programs are very hard to debug and maintain. When needed, one can use subclass-superclass structure too, but breaking code into reusable functions is a must. Most real world usecases (at least to the level I have managed till now) can be sorted with a code base consisting of clean small functions and a few required classes.
MIT or BSD licensed external libraries only in codebase.

Flask/Django Architecture
-----------------------------
how to handle concurrency in ticket booking django?
how to update the UI in django without refreshing?
create the twitter like architecture using python web app?
how to setup load balancer for flask application?
what are the ways to pass data from Frontend to Api Endpoints?
how to scale your django or flask application?
queues in django?
what is gatewayapi and apigateway?
how do you deploy your application in aws?
what is monolithic application?
what is monolithic vs soa?
benefits of service oriented architecture?
how to improve performance of database?
how do u make ur web application handle billions of end user requests?
what is the ideal response time of web application?
how do you authenticate a flask application?
how to you authorize a flask application?
how to allow all users to a flask endpoint who have been authorized?
how to make no authorizaton for certain enpoints in flask application? the user is authenticated and no authentication is required for certain end point?

Machine Learning
-----------------------
what is the use of docker in django?
what is the accuracy of your models?
what is blackbox testing in machine learning?
how to take care of packages in jenkins deployment?
why do we use redis server to improve performance?
have you worked with graphql?
what is api gateway and gateway api?
how is pipelining achieved using dask,spark?
how distributed architectures work with django sqa, rabbitmq, celery?

Devops
------------
How do you deploy your django application?


Team Lead 
---------------------
what is sprint review and sprint retrospective?
what is sprint zero?

SQL
---------------------------------
sql query to pull the reporters of for an employee provided employee name?
sql quyer to pull the boss of an employee provided employee name?


Write an SQL query to get the 3 most popular pizzas for each city.
The schema of the database is shown in the attachments tab.
The goal is to rank the pizza by the count of orders in descending order for each city where orders were made. Pizzas with the same number of orders should be sorted alphabetically in ascending order. For each city, the top 3 pizzas must be selected and concatenated into a final list.
In the final list the pizza names must be delimited by comma and space characters. Items in the list must be sorted alphabetically.


Python
----------------------------------------

Write a program that finds all the permutations of a string.
Input:
Your program should read lines of text from standard input.
Output:
For each line of input, print to standard output all permutations of the string, comma separated, in alphabetical order, one output string per line.
hat
aht,ath,hat,hta,tah,tha
---------------------------------------------------------------------------------------------------------------------------



.pyc is the compiled bytecode of the imported module, when .pyc file is present python 
	virtual machine executes it, if not program finds the .py file and compiles it to .pyc file.
Python checks to see if the .pyc file's internal timestamp is not older than the corresponding .py

At the simple level, a .pyc file is a binary file containing only three things:
A four-byte magic number,
A four-byte modification timestamp, and
A marshalled code object.

difference between list and tuples?
list is mutable,indexed, ordered collection of items
tuple is immutable, unindexed, ordered collection of items

list are mutable, ordered collection of items of differnet type of data. 
tuples are immutable , ordered collection of items of different type of data. 
https://stackoverflow.com/questions/13694034/is-a-python-list-guaranteed-to-have-its-elements-stay-in-the-order-they-are-inse

difference between set and list?
list is mutable,indexed, ordered collection of items
set is unordered, mutable, unindexed collection of items

what is a dictionary?
dictionary is a collection of key value pairs, dictionaries are ordered in the recent version of python

what is an iterator?
iterator is an object that contains countable number of values, 
iterator has to implement the iterator protocol iter and next

what is a generator?
generator is an object that lets us iterate via a function
generator uses yield keyword instead of a return 

difference between iterator and generator?
every generator is an iterator, but not every iterator is a generator.
generators saves the state of the local variables

what are python arrays?
https://docs.python.org/3/library/array.html
import array
sample_array = array.array(typecode, [1,2,3])
typecode refer in the above link
b,B,u, h, H, i, I,L,q,f,Q,d
d double 
i signed int 
I unsigned int
q signed long logn
L unsigned Long

what is async operations in python?
asyncio is used for parallelism, threading, concurrency
asycio uses await and asyc, await is used in the function 

what is difference between private, protected and public attributes and methods in python?
private __, strictly called within the class
protected _ called within and outside the class by its child classes
public called only by its instances




Project Management Professional (PMP)
AWS Certified Database
AWS Certified Machine Learning
AWS Certified Solutions Architect - Professional
AWS Certified Data Analytics





